// ================================
// SCRIPT D'INITIALISATION DE LA BASE DE DONN√âES
// ================================
// Ce script initialise la base de donn√©es avec :
// - Les r√¥les par d√©faut (Administrateur, Manager, Employ√©)
// - Les permissions de base
// - Un compte administrateur par d√©faut

require('dotenv').config();
const { initDb, sequelize } = require('../config/sequelize');
const { initDefaultRolesAndPermissions } = require('../utils/permissionsInit');
const bcrypt = require('bcrypt');
const User = require('../models/User');
const Role = require('../models/Role');

async function seed() {
  try {
    console.log('üå± [SEED] D√©marrage du script de peuplement de la base de donn√©es...\n');

    // 1. Connexion √† la base de donn√©es
    console.log('üì° [SEED] Connexion √† la base de donn√©es...');
    await initDb();
    console.log('‚úÖ [SEED] Connexion √©tablie\n');

    // 2. Synchronisation des mod√®les
    console.log('üîÑ [SEED] Synchronisation des mod√®les...');
    require('../models');
    await sequelize.sync({ force: false, alter: false });
    console.log('‚úÖ [SEED] Mod√®les synchronis√©s\n');

    // 3. Initialisation des r√¥les et permissions
    console.log('üõ°Ô∏è  [SEED] Cr√©ation des r√¥les et permissions...');
    await initDefaultRolesAndPermissions();
    console.log('‚úÖ [SEED] R√¥les et permissions cr√©√©s\n');

    // 4. Cr√©ation de l'administrateur par d√©faut
    console.log('üë§ [SEED] Cr√©ation de l\'administrateur par d√©faut...');

    const adminRole = await Role.findOne({ where: { name: 'Administrateur' } });

    if (!adminRole) {
      console.error('‚ùå [SEED] Erreur : R√¥le Administrateur non trouv√©');
      process.exit(1);
    }

    const existingAdmin = await User.findOne({ where: { username: 'admin' } });

    if (existingAdmin) {
      console.log('‚ÑπÔ∏è  [SEED] Un administrateur existe d√©j√†');
    } else {
      const hashedPassword = await bcrypt.hash('Admin123!', 10);

      await User.create({
        username: 'admin',
        password: hashedPassword,
        firstName: 'Admin',
        lastName: 'System',
        email: 'admin@maliandevs.com',
        roleId: adminRole.id,
        isActive: true,
        emailVerified: true
      });

      console.log('‚úÖ [SEED] Administrateur cr√©√© avec succ√®s');
      console.log('   Username: admin');
      console.log('   Password: Admin123!');
      console.log('   Email: admin@maliandevs.com\n');
    }

    console.log('üéâ [SEED] Peuplement termin√© avec succ√®s!\n');
    console.log('üìã [SEED] R√©capitulatif:');
    console.log('   - R√¥les: Administrateur, Manager, Employ√©');
    console.log('   - Permissions: Toutes les permissions de base');
    console.log('   - Admin: admin / Admin123!\n');

    process.exit(0);

  } catch (error) {
    console.error('‚ùå [SEED] Erreur lors du peuplement:', error);
    process.exit(1);
  }
}

seed();
